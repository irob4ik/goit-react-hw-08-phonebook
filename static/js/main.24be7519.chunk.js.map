{"version":3,"sources":["redux/auth/auth-selectors.js","components/Nav/Navigation.js","components/Nav/AuthNav.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Container/Container.js","components/Loader/Loader.js","components/Nav/PrivateRoute.js","components/Nav/PublicRoute.js","App.js","redux/phonebook-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","components/Nav/nav.module.css","service/contacts-api.js","redux/phonebook-operations.js","components/UserMenu/usermenu.module.css","redux/phonebook-actions.js","components/AppBar/appbar.module.css","components/Container/container.module.css","components/Loader/loader.module.css"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUsername","user","name","getFetchingCurrentUser","isfetchCurrentUser","Navigation","useSelector","exact","to","className","styles","link_title","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","container","src","alt","width","userName","Button","Btn","variant","type","onClick","authOperations","logOut","AppBar","navContainer","Container","children","Loader","Spinner","color","height","timeout","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","useEffect","fetchCurrentUser","fallback","path","component","items","createReducer","actions","addContact","payload","deleteContact","filter","number","fetchContacts","fulfilled","_","action","changeFilter","isLoading","pending","rejected","error","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","logIn","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","storeNpersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","console","log","thunkAPI","getState","persistedToken","rejectWithValue","get","module","exports","postContacts","contact","deleteContacts","contactId","delete","contactsAPI","createAction","id"],"mappings":"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","file":"static/js/main.24be7519.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getFetchingCurrentUser = state => state.auth.isfetchCurrentUser;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUsername,\r\n    getFetchingCurrentUser,\r\n};\r\n\r\nexport default authSelectors;","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './nav.module.css';\r\n\r\nexport default function Navigation() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink\r\n                exact\r\n                to=\"/\"\r\n                className={styles.link_title}\r\n            >MY PhonebooK\r\n            </NavLink>\r\n\r\n            {isLoggedIn && (\r\n                <NavLink                \r\n                    to=\"/contacts\"                \r\n                    className={styles.link}\r\n                    activeClassName={styles.activeLink}\r\n                >MY Contacts\r\n                </NavLink>\r\n            )}                         \r\n        </nav>      \r\n    );    \r\n}","import { NavLink } from 'react-router-dom';\r\nimport styles from './nav.module.css';\r\n\r\nexport default function AuthNav() {\r\n    return (\r\n        <nav>\r\n            <NavLink                \r\n                to=\"/login\"                \r\n                className={styles.link}\r\n                activeClassName={styles.activeLink}\r\n            >Login</NavLink>\r\n\r\n            <NavLink                \r\n                to=\"/register\"                \r\n                className={styles.link}\r\n                activeClassName={styles.activeLink}\r\n            >Register</NavLink>\r\n        </nav>  \r\n    );    \r\n}","export default __webpack_public_path__ + \"static/media/avatar.a6506fe1.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './usermenu.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport defaultAvatar from './avatar.png';\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUsername);\r\n    const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img src={avatar} alt=\"\" width=\"24\" className={styles.avatar} />\r\n            <span className={styles.userName}>hello, {name}</span>\r\n            <Button\r\n                className={styles.Btn}\r\n                variant=\"outline-light\"\r\n                type=\"button\"\r\n                onClick={()=>dispatch(authOperations.logOut())}\r\n            >Log out</Button>\r\n        </div>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Nav/Navigation';\r\nimport AuthNav from '../Nav/AuthNav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './appbar.module.css'\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n    return (\r\n        <header className={styles.navContainer}>\r\n            <Navigation />\r\n            \r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Spinner from \"react-loader-spinner\";\r\nimport styles from './loader.module.css';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className={styles.Spinner}>\r\n            <Spinner\r\n                type=\"Puff\"\r\n                color=\"#3f51b599\"\r\n                height={150}\r\n                width={150}\r\n                timeout={3000}            \r\n            />\r\n        </div>\r\n    );\r\n} ","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n    return <Route {...routeProps}>{\r\n        isLoggedIn ? children : <Redirect to={redirectTo}/>\r\n    }</Route>\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    \r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    );\r\n}","import React, { lazy, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport Container from './components/Container/Container';\nimport Loader from './components/Loader/Loader';\n// import styles from './app.module.css'\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/Nav/PrivateRoute';\nimport PublicRoute from './components/Nav/PublicRoute';\nimport authSelectors from './redux/auth/auth-selectors';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst NotFoundView = lazy(() => import('./views/NotFoundView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isfetchCurrentUser = useSelector(authSelectors.getFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {!isfetchCurrentUser && (\n        <>\n          <AppBar />\n\n          <Suspense fallback={<Loader />}>\n            \n              <Switch>\n\n                <PublicRoute exact path=\"/\">\n                  <HomeView />\n                </PublicRoute>\n                <PublicRoute path=\"/register\" restricted>\n                  <RegisterView />\n                </PublicRoute>\n                <PublicRoute path=\"/login\" restricted redirectTo='/contacts'>\n                  <LoginView />\n                </PublicRoute>          \n                <PrivateRoute path=\"/contacts\" redirectTo='/login'>\n                  <ContactsView />\n                </PrivateRoute>            \n                <Route exact path=\"\" component={NotFoundView} />\n\n              </Switch>\n                    \n          </Suspense>\n        </>\n      )}\n    </Container>\n  );\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContacts } from './phonebook-operations';\r\nimport actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ number }) => number !== payload),\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => true,\r\n    [fetchContacts.rejected]: () => true,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoading,\r\n    error,\r\n})","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isfetchCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isfetchCurrentUser = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.pending](state, action) {\r\n            state.isfetchCurrentUser = true;\r\n        },\r\n        [authOperations.fetchCurrentUser.rejected](state, action) {\r\n            state.isfetchCurrentUser = false;\r\n        },\r\n        [authOperations.logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {  FLUSH,  REHYDRATE,  PAUSE,  PERSIST,  PURGE,  REGISTER} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './phonebook-reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nconst middlware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    }\r\n}).concat(logger);\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        // auth: authReducer,\r\n        contacts: contactsReducer,\r\n    },\r\n    middlware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\nconst storeNpersistor = { store, persistor };\r\n\r\nexport default storeNpersistor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>      \n    </Provider>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = \"\";\r\n    },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n})\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n})\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n})\r\n\r\nconst fetchCurrentUser = createAsyncThunk('auth/resfresh', async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    \r\n    if (persistedToken === null) {\r\n        return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    try {        \r\n        const { data } = await axios.get('/users/current');\r\n        console.log(data);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n});\r\n\r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    fetchCurrentUser,\r\n}\r\n\r\nexport default authOperations;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"nav_link__2L2k6\",\"link_title\":\"nav_link_title__-a5BD\",\"activeLink\":\"nav_activeLink__1u7bt\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n}\r\n\r\nexport async function postContacts(contact) {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n    const { data } = await axios.delete(`/contacts/${contactId}`);\r\n    return data;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from '../service/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'user/fetchContacts',\r\n    async () => {\r\n        const contacts = await contactsAPI.fetchContacts();\r\n        return contacts;\r\n});\r\n\r\nexport const postContacts = createAsyncThunk(\r\n    'user/postContacts',\r\n    async contact => {\r\n        try {\r\n            const data = await contactsAPI.postContacts(contact);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n});\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n    'user/deleteContacts',\r\n    async contactId => {\r\n        try {\r\n            const data = await contactsAPI.deleteContacts(contactId);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"usermenu_container__1wLIn\",\"avatar\":\"usermenu_avatar__JkyyK\",\"userName\":\"usermenu_userName__3FmrX\",\"Btn\":\"usermenu_Btn__uTu-z\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ id, name, number }) => ({\r\n    payload: {\r\n        id,\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n    addContact,\r\n    deleteContact,\r\n    changeFilter,\r\n};\r\n\r\nexport default actions;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"appbar_navContainer__vRpll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3AsUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"loader_Spinner__LCnTP\"};"],"sourceRoot":""}